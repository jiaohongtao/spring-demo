# 应用服务 WEB 访问端口
server:
  port: 8080

#spring:
#  kafka:
#    properties:
#      sasl:
#        mechanism: GSSAPI
#        kerberos:
#          service:
#            name: kafka
#      jass:
#        enabled: true
#      security:
#        protocol: SASL_PLAINTEXT


# ##################


# -> -> -> -> -> -> -> ->  -> ->  -> -> kafka 基础配置
# 指定kafka 代理地址，可以多个，以逗号分隔
#spring:
#  kafka:
#    # bootstrap-servers: 10.1.3.25:6667,10.1.3.26:6667
#    bootstrap-servers: 10.1.3.25:6667
#    # broker-list: 10.1.3.25:6667
#    # -> -> -> -> -> -> -> ->  -> ->  -> -> kafka 消息生产者
#    # 重试次数
#    producer:
#      retries: 0
#    # -> -> -> -> -> -> -> ->  -> ->  -> -> kafka 消息消费者
#    # 偏移量策略设置
#    # earliest(当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费)
#    # latest(当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据)
#    # none(topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常)
#    consumer:
#      auto-offset-reset: earliest
#      # 允许自动提交消费者偏移量
#      enable-auto-commit: true
#      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
#
#    # -> -> -> -> -> -> -> ->  -> ->  -> -> Kerberos
#    # Kerberos基础配合配置
#    jaas:
#      enabled: true
#      # config: 'com.sun.security.auth.module.Krb5LoginModule required useTicketCache=true renewTicket=true serviceName="kafka";'
#    properties:
#      sasl:
#        mechanism: PLAIN
#
#      security:
#        protocol: SASL_PLAINTEXT



#spring:
#  kafka:
#    bootstrap-servers: 10.1.3.25:6667,10.1.3.26:6667
#    properties:
#      security:
#        protocol: SASL_PLAINTEXT
#      sasl:
#        mechanism: SCRAM-SHA-256
#        jaas:
#          # config: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="username" password="password";'
#          config: 'com.sun.security.auth.module.Krb5LoginModule required useTicketCache=true renewTicket=true serviceName="kafka";'



#spring:
#  kafka:
#    bootstrap-servers: 10.1.3.113:6667
#    security:
#      protocol: SASL_PLAINTEXT
#      sasl:
#        mechanism: GSSAPI
#        jaas:
#          control-flag: required
#          enabled: true
#          login-module: com.sun.security.auth.module.Krb5LoginModule
#          options:
#            useKeyTab: true
#            keyTab: keytab-value
#            storeKey: true
#            debug: true
#            serviceName: kafka
#            principal: pricipal-value
#          #          config: com.sun.security.auth.module.Krb5LoginModule required \
#          #            useKeyTab=true \
#          #            storeKey=true \
#          #            keyTab="D:/Projects/IdeaProjects/buff/spring-demo/src/main/resources/kafka.service.keytab" \
#          #            principal="kafka/slave1@HADOOP.COM";
#          config: com.sun.security.auth.module.Krb5LoginModule required \
#            useTicketCache=true \
#            renewTicket=true \
#            serviceName="kafka" \
#            keyTab="D:/Projects/IdeaProjects/buff/spring-demo/src/main/resources/kafka.service.keytab" ;
#      kerberos:
#        service-name: "kafka"
#        realms: "EXAMPLE.COM"
#    properties:
#      security.inter.broker.protocol: SASL_PLAINTEXT
#      sasl.enabled.mechanisms: GSSAPI
#      sasl.kerberos.service.name: "kafka"
#  security:
#    user:
#      password: ""
#  autoconfigure:
#    exclude:
#      - org.springframework.cloud.autoconfigure.RefreshAutoConfiguration

kafka:
  bootstrap-servers: 10.1.2.18:6667